BootStrap: docker
From: rocker/geospatial:latest

%post
    # Update package list
    apt-get update

    # Install locales and generate the necessary locale
    apt-get install -y locales
    locale-gen en_US.UTF-8

    # Install fonts for Unicode support
    apt-get install -y fonts-dejavu fonts-liberation fonts-noto \
        fonts-unifont

    # Install SSL certificates and curl for downloading data
    apt-get update && apt-get install -y \
      libcurl4-openssl-dev \
      libssl-dev \
      ca-certificates \
      curl \
      slurm-client \

    # Install ffmpeg
    apt-get update && apt-get install -y \
      ffmpeg

    # Set locale for the environment
    echo "LANG=en_US.UTF-8" >> /etc/default/locale
    echo "LC_ALL=en_US.UTF-8" >> /etc/default/locale
    export LANG=en_US.UTF-8
    export LC_ALL=en_US.UTF-8

    # Install necessary build tools and GCC with OpenMP support
    apt-get install -y build-essential gcc g++ libomp-dev

    # Install R packages
    Rscript -e "install.packages(c('pak', 'devtools'))"
    Rscript -e "devtools::install_version('targets', version = '1.10.0')"
    Rscript -e "install.packages('geotargets', \
        repos = c('https://ropensci.r-universe.dev', 'https://cran.r-project.org'))"
    Rscript -e "install.packages(c('tarchetypes'))"
    Rscript -e "install.packages(c('lutz'))"
    Rscript -e "pak::pak('wlandau/crew'); pak::pak('wlandau/crew.cluster')"
    Rscript -e "install.packages('https://cran.r-project.org/src/contrib/Archive/crew.cluster/crew.cluster_0.3.4.tar.gz', repos = NULL, type = 'source')"
    Rscript -e "install.packages(c('latex2exp', 'ggspatial'))"
    Rscript -e "install.packages('https://cran.r-project.org/src/contrib/Archive/terra/terra_1.7-78.tar.gz', repos = NULL, type = 'source')"
    Rscript -e "install.packages('https://cran.r-project.org/src/contrib/Archive/tidyterra/tidyterra_0.6.1.tar.gz', repos = NULL, type = 'source')"
    Rscript -e "install.packages('https://cran.r-project.org/src/contrib/Archive/ggplot2/ggplot2_3.5.1.tar.gz', repos = NULL, type = 'source')"    
    
    
%environment
    # Set locale for the container environment
    export LANG=en_US.UTF-8
    export LC_ALL=en_US.UTF-8
    export TERM=xterm-256color
    # find a working certificate to open https://cdn.proj.org when using terra::project
    export CURL_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt
    
%runscript

%labels
    create urban heat island movies from .tif
